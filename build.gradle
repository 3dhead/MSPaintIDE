plugins {
    id 'application'
    id 'idea'
    id 'java'
    id 'maven'
    id 'antlr'
    id "it.tellnet.sass" version "1.2"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

ext {
    DEV_MODE = true
    STATIC_LSP_DIRECTORY = '' // Only used if in Dev Mode, defaults to %LocalAppData%\MSPaintIDE
}

group = 'com.uddernetworks.mspaint'
version = '3.1.0'

description = "Programming in MS Paint"

sourceCompatibility = 12

tasks.withType(JavaCompile) {
//	options.encoding = 'UTF-8'
//    options.compilerArgs << '--add-exports=java.management/sun.management=ALL-UNNAMED'
//    options.compilerArgs << '--add-exports=java.desktop/sun.font=ALL-UNNAMED'
//    options.compilerArgs << '--enable-preview'
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
}

sass {
    sassDir = 'src/main/resources'
    cssDir = 'src/main/resources'
}

mainClassName = 'com.uddernetworks.mspaint.main.JFXWorkaround'
// mainClassName = 'com.uddernetworks.mspaint.discord.DiscordRPCManager'

jar {
    manifest {
        attributes("Main-Class": "com.uddernetworks.mspaint.main.JFXWorkaround")
//        attributes("SplashScreen-Image": "splash/splash-full.png")
    }
}

configurations {
    javafxCompile
}

dependencies {
    // TODO: Clean this monstrosity of shit
    implementation 'com.intellij:forms_rt:7.0.3'

    implementation 'com.github.MSPaintIDE:JFoenix:9.0.8-J12-jitpack'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.uddernetworks.newocr:NewOCR:2.0.0'
    implementation 'org.apache.xmlgraphics:batik-rasterizer:1.10'
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.2.Final'
    implementation 'net.java.dev.jna:jna:5.2.0'
    implementation 'commons-codec:commons-codec:1.11'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-compress:1.18'

    implementation 'org.gradle:gradle-tooling-api:4.10.2'

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-log4j12:1.7.25'

    javafxCompile "org.openjfx:javafx-base:12.0.1:win"
    javafxCompile "org.openjfx:javafx-graphics:12.0.1:win"
    javafxCompile "org.openjfx:javafx-controls:12.0.1:win"
    javafxCompile "org.openjfx:javafx-fxml:12.0.1:win"
    compile ('com.github.MSPaintIDE:PaintAssistant:1.0.1')  {
        exclude group: 'com.google.auto.value'
    }

    implementation      "com.google.auto.value:auto-value-annotations:1.6.2"
    annotationProcessor "com.google.auto.value:auto-value:1.6.2"

    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.7.2'
    implementation 'org.fxmisc.richtext:richtextfx:0.10.1'
    implementation 'org.antlr:antlr4-runtime:4.7.2'
    antlr 'org.antlr:antlr4:4.7.2'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    implementation 'com.github.Vatuu:discord-rpc:1.6.2'

    implementation configurations.javafxCompile
}

run {
    environment.putAll([
            "PaintInjector": "${rootProject.projectDir}\\native",
            "NativePath": "${rootProject.projectDir}\\native",
            "DEV_MODE": DEV_MODE,
            "STATIC_LSP_DIRECTORY": STATIC_LSP_DIRECTORY
    ])
    jvmArgs("--illegal-access=deny")
    jvmArgs("--add-opens", "java.base/jdk.internal.loader=ALL-UNNAMED")
    jvmArgs("--add-opens", "java.base/java.io=ALL-UNNAMED")
    jvmArgs("--add-opens", "java.base/java.util=ALL-UNNAMED")
    jvmArgs("--enable-preview")
//    args = ['Test.txt']
}

task preLaunch {
    doLast {
        println 'SCSS Compile'
        sassCompile.execute()
    }
}

task replaceStuff {
    doLast {
        println 'SCSS Replace'
        ant.replaceregexp(match: '@charset "UTF-8";', replace: '') {
            fileset(dir: 'src/main/resources', includes: 'style.css')
        }
    }
}

compileJava.dependsOn preLaunch
preLaunch.finalizedBy replaceStuff

task copyDependencies(type: Copy) {
    from configurations.runtime - configurations.javafxCompile
    from jar
    into "${buildDir}/libraries"
}
