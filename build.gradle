plugins {
    id 'application'
    id 'idea'
    id 'java'
    id 'maven'
    id "it.tellnet.sass" version "1.2"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id 'org.openjfx.javafxplugin' version '0.0.6'
}

group = 'com.uddernetworks.mspaint'
version = '2.2.0-SNAPSHOT'

description = "Programming in MS Paint"

sourceCompatibility = 11

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
    options.compilerArgs << '--add-exports=java.management/sun.management=ALL-UNNAMED'
}

repositories {
    mavenLocal()
    mavenCentral()
}

sass {
    sassDir = 'src/main/resources'
    cssDir = 'src/main/resources'
}

idea {
    module {
        inheritOutputDirs = true
    }
}

mainClassName = 'com.uddernetworks.mspaint.main.JFXWorkaround'

jar {
    manifest {
        attributes("Main-Class": "com.uddernetworks.mspaint.main.JFXWorkaround")
        attributes("SplashScreen-Image": "splash/splash-full.png")
    }
}

shadowJar {
    zip64 true
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

applicationDefaultJvmArgs = [
        "--add-exports=javafx.base/com.sun.javafx=ALL-UNNAMED",
        "--add-exports=javafx.base/com.sun.javafx.beans=ALL-UNNAMED",
        "--add-exports=javafx.base/com.sun.javafx.binding=ALL-UNNAMED",
        "--add-exports=javafx.base/com.sun.javafx.collections=ALL-UNNAMED",
        "--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED",
        "--add-exports=javafx.base/com.sun.javafx.logging=ALL-UNNAMED",
        "--add-exports=javafx.base/com.sun.javafx.reflect=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.scene.input=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.scene.layout=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.scene.text=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.scene.traversal=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED",
        "--add-exports=javafx.graphics/com.sun.javafx.util=ALL-UNNAMED"
]

dependencies {
    compile group: 'com.intellij', name: 'forms_rt', version:'7.0.3'
    compile(group: 'org.apache.tika', name: 'tika-parsers', version:'1.20') {
        exclude(module: 'jhighlight')
    }

    compile group: 'org.codelibs', name: 'jhighlight', version:'1.0.3'
    compile group: 'com.jfoenix', name: 'jfoenix', version:'9.0.8'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.8.5'
    compile 'com.uddernetworks.newocr:NewOCR:1.2.0'
    compile group: 'org.apache.xmlgraphics', name: 'batik-rasterizer', version: '1.10'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.2.Final'
}

task preLaunch << {
    println 'COMPILE'
    sassCompile.execute()
}

task replaceStuff << {
    println 'REPLACE'
    ant.replaceregexp(match: '@charset "UTF-8";', replace: '') {
        fileset(dir: 'src/main/resources', includes: 'style.css')
    }
}

preLaunch.finalizedBy replaceStuff