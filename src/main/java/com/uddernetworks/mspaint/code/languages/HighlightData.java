package com.uddernetworks.mspaint.code.languages;

import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.Parser;
import org.antlr.v4.runtime.TokenStream;

import java.awt.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public abstract class HighlightData {

    protected Map<List<String>, Integer> tokenMap = new HashMap<>();

    /**
     * Gets the {@link Lexer} generated by the ANTLR .g4 file for the current language.
     *
     * @param inputStream The {@link CharStream} input
     * @return The {@link Lexer}
     */
    abstract public Lexer getLexer(CharStream inputStream);

    /**
     * Gets the {@link Parser} generated by the ANTLR .g4 file for the current language.
     *
     * @param input The {@link TokenStream} input
     * @return The {@link Parser}
     */
    abstract public Parser getParser(TokenStream input);

    public Color getColor(String tokenName) {
        return this.tokenMap.entrySet().stream().filter(entry -> entry.getKey().contains(tokenName)).findFirst().map(Map.Entry::getValue).map(Color::new).orElseThrow(() -> new RuntimeException("No color found for token " + tokenName));
    }

    public Color hex2Rgb(String colorStr) {
        return new Color(
                Integer.valueOf( colorStr.substring( 0, 2 ), 16 ),
                Integer.valueOf( colorStr.substring( 2, 4 ), 16 ),
                Integer.valueOf( colorStr.substring( 4, 6 ), 16 ) );
    }

}
